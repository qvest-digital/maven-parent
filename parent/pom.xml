<?xml version="1.0" encoding="UTF-8"?>
<!--
	To retrieve the latest source code, useful instructions and other aids:

	$ mvn -U -Dartifact=org.evolvis.tartools.maven-parent:bs:RELEASE:tgz:source -DoutputDirectory=. dependency:copy #

	Replace RELEASE with the <version> number below to get the artefact corresponding to that release.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.evolvis.tartools.maven-parent</groupId>
	<artifactId>pom</artifactId>
	<version>3.4-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>Parent POM for Maven projects — Parent POM</description>
	<url>https://evolvis.org/plugins/scmgit/cgi-bin/gitweb.cgi?p=tartools/mvnparent.git</url>
	<licenses>
		<license>
			<!-- short name: MirBSD -->
			<name>The MirOS Licence</name>
			<url>http://www.mirbsd.org/MirOS-Licence.htm</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>mirabilos</name>
			<email>t.glaser@qvest-digital.com</email>
			<organization>QVEST ⮡ dıgıtal</organization>
			<organizationUrl>https://qvest-digital.com/</organizationUrl>
		</developer>
	</developers>
	<organization>
		<name>Qvest Digital AG, Germany</name>
		<url>https://qvest-digital.com/</url>
	</organization>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<runtime.jarname>${project.artifactId}-${project.version}.jar</runtime.jarname>
		<!-- ‣ configurable settings -->
		<archiver.copyright.firstyear>XX(archiver.copyright.firstyear not set)XX</archiver.copyright.firstyear>
		<archiver.copyright.lastyear>XX(archiver.copyright.lastyear not set)XX</archiver.copyright.lastyear>
		<archiver.copyright.years>${archiver.copyright.firstyear}–${archiver.copyright.lastyear}</archiver.copyright.years>
		<archiver.copyright>Copyright © ${archiver.copyright.years}; Licensor: $version_vendor</archiver.copyright>
		<javadoc.copyright>© ${archiver.copyright.years} the respective authors; see &lt;tt&gt;${project.build.finalName}-sources.jar&lt;/tt&gt; for licences.</javadoc.copyright>
		<javadoc.doclint>all</javadoc.doclint>
		<!-- default to nōn-JPMS (“legacy”) mode -->
		<javadoc.noJ9modules>true</javadoc.noJ9modules>
		<javaRelease>8</javaRelease>
		<!-- http://groovy.github.io/GMavenPlus/compileTests-mojo.html#targetBytecode -->
		<gmavenplus.javaRelease>1.8</gmavenplus.javaRelease>
		<maven.minimum.version>3.6.3</maven.minimum.version>
		<!-- ‣ internal and utility settings -->
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<maven.compiler.source>${javaRelease}</maven.compiler.source>
		<maven.compiler.target>${javaRelease}</maven.compiler.target>
		<java.version>${javaRelease}</java.version>
		<releaseVersion>${project.version}</releaseVersion>
		<!-- ‣ dependency management for the “tests” classifier and library JARs we provide -->
		<org.evolvis.tartools.maven-parent.version>3.4-SNAPSHOT</org.evolvis.tartools.maven-parent.version>
		<org.evolvis.tartools.maven-parent.jdx>1.2</org.evolvis.tartools.maven-parent.jdx>
		<!-- ‣ dependency management for Maven plugins -->
		<!-- for many -->
		<mvnplugindep.commons-compress>1.26.2</mvnplugindep.commons-compress>
		<mvnplugindep.commons-io>2.16.1</mvnplugindep.commons-io>
		<mvnplugindep.plexus-archiver>4.10.0</mvnplugindep.plexus-archiver>
		<!-- retrofitting for older ones -->
		<mvnplugindep.plexus-utils.old>3.0.24</mvnplugindep.plexus-utils.old>
		<!-- ‣ maven plugins -->
		<gmavenplus.plugin.version>3.0.2</gmavenplus.plugin.version>
		<!-- ↓ not used by us -->
		<maven.antrun.version>3.1.0</maven.antrun.version>
		<maven.assembly.version>3.7.1</maven.assembly.version>
		<maven.buildhelper.version>3.6.0</maven.buildhelper.version>
		<maven.clean.version>3.4.0</maven.clean.version>
		<maven.compiler.version>3.13.0</maven.compiler.version>
		<maven.dependency.version>3.7.1</maven.dependency.version>
		<maven.deploy.version>3.1.2</maven.deploy.version>
		<maven.ear.version>3.3.0</maven.ear.version>
		<maven.eclipse.version>2.10</maven.eclipse.version>
		<maven.enforcer.version>3.5.0</maven.enforcer.version>
		<maven.exec.version>3.3.0</maven.exec.version>
		<maven.gpg.version>3.2.4</maven.gpg.version>
		<maven.install.version>3.1.2</maven.install.version>
		<maven.jacoco.version>0.8.12</maven.jacoco.version>
		<maven.jar.version>3.4.2</maven.jar.version>
		<maven.javadoc.version>3.7.0</maven.javadoc.version>
		<maven.latex.version>1.4.5</maven.latex.version>
		<maven.release.version>3.1.1</maven.release.version>
		<!-- due to MRESOURCES-237 and MSHARED-325 -->
		<maven.resources.version>2.6</maven.resources.version>
		<maven.shade.version>3.6.0</maven.shade.version>
		<!-- ↓ not used by us; insecure dependencies -->
		<maven.site.version>3.12.1</maven.site.version>
		<!-- due to symlink issues, like MRESOURCE -->
		<maven.source.version>3.2.1</maven.source.version>
		<maven.surefire.version>3.3.1</maven.surefire.version>
		<maven.war.version>3.4.0</maven.war.version>
		<!-- ‣ dependency management -->
		<guava.version>33.2.1-jre</guava.version>
		<!-- ‣ release management -->
		<project.build.outputTimestamp>2024-07-17T17:56:11Z</project.build.outputTimestamp>
	</properties>
	<scm>
		<connection>scm:git:https://evolvis.org/anonscm/git/tartools/mvnparent.git</connection>
		<developerConnection>scm:git:ssh://maven@evolvis.org/scmrepos/git/tartools/mvnparent.git</developerConnection>
		<url>https://evolvis.org/plugins/scmgit/cgi-bin/gitweb.cgi?p=tartools/mvnparent.git</url>
		<tag>HEAD</tag>
	</scm>
	<profiles>
		<profile>
			<id>build-mvnparent</id>
			<properties>
				<archiver.copyright.firstyear>2015</archiver.copyright.firstyear>
				<archiver.copyright.lastyear>2024</archiver.copyright.lastyear>
				<archiver.copyright.years>2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024</archiver.copyright.years>
			</properties>
		</profile>
		<profile>
			<id>dstrepo-central</id>
			<distributionManagement>
				<repository>
					<releases>
						<checksumPolicy>fail</checksumPolicy>
					</releases>
					<snapshots>
						<checksumPolicy>fail</checksumPolicy>
					</snapshots>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
				<snapshotRepository>
					<releases>
						<checksumPolicy>fail</checksumPolicy>
					</releases>
					<snapshots>
						<checksumPolicy>fail</checksumPolicy>
					</snapshots>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
		<profile>
			<id>dstrepo-qd</id>
			<distributionManagement>
				<repository>
					<releases>
						<checksumPolicy>fail</checksumPolicy>
					</releases>
					<snapshots>
						<checksumPolicy>fail</checksumPolicy>
					</snapshots>
					<id>qd-nexus</id>
					<name>qvest-digital-nexus releases</name>
					<url>https://repo-bn-01.lan.tarent.de/repository/maven-releases</url>
				</repository>
				<snapshotRepository>
					<releases>
						<checksumPolicy>fail</checksumPolicy>
					</releases>
					<snapshots>
						<checksumPolicy>fail</checksumPolicy>
					</snapshots>
					<id>qd-nexus</id>
					<name>qvest-digital-nexus snapshots</name>
					<url>https://repo-bn-01.lan.tarent.de/repository/maven-snapshots</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
		<profile>
			<id>gpg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jdk8orolder</id>
			<!-- only tested with JDK 8 -->
			<activation>
				<jdk>(,9)</jdk>
			</activation>
			<properties>
				<!-- ‣ maven plugins -->
				<!-- ‣ dependency management -->
			</properties>
		</profile>
		<profile>
			<id>jdk9ornewer</id>
			<!-- only tested with JDK 11, 17 and 21 -->
			<activation>
				<jdk>[9,)</jdk>
			</activation>
			<properties>
				<maven.compiler.release>${javaRelease}</maven.compiler.release>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<compilerArgs>
								<!-- copy of main configuration -->
								<arg>-Xlint</arg>
								<!-- plus: -->
								<arg>-proc:full</arg>
							</compilerArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jdk12ornewer</id>
			<!-- only tested with JDK 17 and 21 -->
			<activation>
				<jdk>[12,)</jdk>
			</activation>
			<properties>
				<javadoc.doclint>all,-missing</javadoc.doclint>
			</properties>
		</profile>
		<profile>
			<id>jre-not-below-jdk</id>
			<activation>
				<file>
					<exists>${java.home}/bin/javadoc</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>with-implicit-dependencies</id>
			<activation>
				<property>
					<name>!without-implicit-dependencies</name>
				</property>
			</activation>
		</profile>
	</profiles>
	<build>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
		<!-- note https://issues.apache.org/jira/browse/MNG-7383 -->
		<!-- combine.self/combine.children do not work on resources -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources-filtered</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
				<filtering>false</filtering>
			</testResource>
			<testResource>
				<directory>${project.basedir}/src/test/resources-filtered</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<directory>${project.basedir}/target</directory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${maven.buildhelper.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven.exec.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>${gmavenplus.plugin.version}</version>
					<configuration>
						<targetBytecode>${gmavenplus.javaRelease}</targetBytecode>
					</configuration>
					<executions>
						<execution>
							<id>gmavenplus-compile-tests</id>
							<goals>
								<goal>compileTests</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>com.google.guava</groupId>
							<artifactId>guava</artifactId>
							<version>${guava.version}</version>
						</dependency>
						<dependency>
							<!-- from commons-compress -->
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${maven.jacoco.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-utils</artifactId>
							<version>${mvnplugindep.plexus-utils.old}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>com.github.fracpete</groupId>
					<artifactId>latex-maven-plugin</artifactId>
					<version>${maven.latex.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<!-- from Super POM, not used by us -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.version}</version>
					<configuration>
						<overrideUid>0</overrideUid>
						<overrideUserName>root</overrideUserName>
						<overrideGid>0</overrideGid>
						<overrideGroupName>root</overrideGroupName>
						<tarLongFileMode>posix</tarLongFileMode>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${maven.ear.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							</manifest>
							<manifestEntries>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Job>${JOB_NAME}</Build-Job>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Id>${BUILD_ID}</Build-Id>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Number>${BUILD_NUMBER}</Build-Number>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Repository-Rev>${GIT_COMMIT}</Build-Repository-Rev>
								<Build-Time>${maven.build.timestamp}</Build-Time>
								<Target-JRE>${javaRelease}</Target-JRE>
								<version_name>${project.groupId}:${project.artifactId}</version_name>
								<version_description>${project.description}</version_description>
								<version_copyright>${archiver.copyright}</version_copyright>
								<version_vendor>${project.organization.name} (${project.organization.url})</version_vendor>
								<version_version>${project.version}</version_version>
							</manifestEntries>
						</archive>
					</configuration>
					<dependencies>
						<dependency>
							<!-- from commons-compress via plexus-archiver -->
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<!-- from plexus-archiver -->
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven.eclipse.version}</version>
					<configuration>
						<downloadJavadocs>true</downloadJavadocs>
						<downloadSources>true</downloadSources>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<!-- from plexus-archiver -->
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-utils</artifactId>
							<version>${mvnplugindep.plexus-utils.old}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven.gpg.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							</manifest>
							<manifestEntries>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Job>${JOB_NAME}</Build-Job>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Id>${BUILD_ID}</Build-Id>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Number>${BUILD_NUMBER}</Build-Number>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Repository-Rev>${GIT_COMMIT}</Build-Repository-Rev>
								<Build-Time>${maven.build.timestamp}</Build-Time>
								<Target-JRE>${javaRelease}</Target-JRE>
								<version_name>${project.groupId}:${project.artifactId}</version_name>
								<version_description>${project.description}</version_description>
								<version_copyright>${archiver.copyright}</version_copyright>
								<version_vendor>${project.organization.name} (${project.organization.url})</version_vendor>
								<version_version>${project.version}</version_version>
								<!--suppress UnresolvedMavenProperty -->
								<x-tartools-cp>${runtime.classpath}</x-tartools-cp>
							</manifestEntries>
						</archive>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.version}</version>
					<configuration>
						<escapeString>\</escapeString>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-utils</artifactId>
							<version>${mvnplugindep.plexus-utils.old}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven.shade.version}</version>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<!-- from Super POM, not used by us -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.google.guava</groupId>
							<artifactId>guava</artifactId>
							<version>${guava.version}</version>
						</dependency>
						<dependency>
							<!-- from commons-compress via plexus-archiver -->
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<!-- from plexus-archiver -->
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.version}</version>
					<dependencies>
						<dependency>
							<!-- from commons-compress via plexus-archiver -->
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<!-- from plexus-archiver -->
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<!-- https://github.com/codehaus-plexus/plexus-archiver/issues/160 -->
							<groupId>org.evolvis.tartools.forked</groupId>
							<artifactId>plexus-archiver-4.2.1</artifactId>
							<version>2</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.version}</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<webappDirectory>${project.build.directory}/war/webapps/</webappDirectory>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							</manifest>
							<manifestEntries>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Job>${JOB_NAME}</Build-Job>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Id>${BUILD_ID}</Build-Id>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Number>${BUILD_NUMBER}</Build-Number>
								<!--suppress UnresolvedMavenProperty -->
								<Build-Repository-Rev>${GIT_COMMIT}</Build-Repository-Rev>
								<Build-Time>${maven.build.timestamp}</Build-Time>
								<Target-JRE>${javaRelease}</Target-JRE>
								<version_name>${project.groupId}:${project.artifactId}</version_name>
								<version_description>${project.description}</version_description>
								<version_copyright>${archiver.copyright}</version_copyright>
								<version_vendor>${project.organization.name} (${project.organization.url})</version_vendor>
								<version_version>${project.version}</version_version>
							</manifestEntries>
						</archive>
						<archiveClasses>true</archiveClasses>
						<webResources combine.children="append">
							<resource>
								<filtering>true</filtering>
								<directory>src/main/webapp</directory>
								<includes>
									<include>artifact-version</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<version>${mvnplugindep.commons-io}</version>
						</dependency>
						<dependency>
							<!-- from plexus-archiver -->
							<groupId>org.apache.commons</groupId>
							<artifactId>commons-compress</artifactId>
							<version>${mvnplugindep.commons-compress}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${mvnplugindep.plexus-archiver}</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<!-- allow code coverage analysis in Sonar -->
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${javaRelease}</source>
					<target>${javaRelease}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- sync with jdk9ornewer profile -->
					<compilerArgs>
						<arg>-Xlint</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>analyse-dependency-duplicates</id>
						<phase>validate</phase>
						<goals>
							<goal>analyze-duplicate</goal>
						</goals>
					</execution>
					<execution>
						<id>analyse-dependency-exclusions</id>
						<phase>validate</phase>
						<goals>
							<goal>analyze-exclusions</goal>
						</goals>
						<configuration>
							<exclusionFail>true</exclusionFail>
						</configuration>
					</execution>
					<execution>
						<id>analyse-dependency-management</id>
						<phase>validate</phase>
						<goals>
							<goal>analyze-dep-mgt</goal>
						</goals>
						<configuration>
							<failBuild>true</failBuild>
							<ignoreDirect>false</ignoreDirect>
						</configuration>
					</execution>
					<execution>
						<id>analyse-dependency-usage</id>
						<goals>
							<goal>analyze-only</goal>
						</goals>
						<configuration>
							<failOnWarning>true</failOnWarning>
							<outputXML>true</outputXML>
							<verbose>true</verbose>
						</configuration>
					</execution>
					<execution>
						<id>generate-classpath-artefact</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<!-- do not attach, causes OSSRH validation errors -->
							<attach>false</attach>
							<!-- use control characters to separate OS-independently -->
							<fileSeparator></fileSeparator>
							<!-- include runtime scopes only; provided may also be needed -->
							<includeScope>runtime</includeScope>
							<!-- use marker to præfix paths OS-independently -->
							<localRepoProperty>M2REPO</localRepoProperty>
							<!-- so run.sh knows which JAR to run and for speedup -->
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}.cp</outputFile>
							<!-- avoid zero-length files; these are better reusable anyway -->
							<outputFilterFile>true</outputFilterFile>
							<!-- also make this available in the ${runtime.classpath} property -->
							<outputProperty>runtime.classpath</outputProperty>
							<!-- use control characters to separate OS-independently -->
							<pathSeparator></pathSeparator>
							<!-- consistence -->
							<regenerateFile>true</regenerateFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>mvnparent-enforce-run</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<bannedDependencies>
									<excludes combine.children="append">
										<!-- Avoid the M.A.D. Gadget vulnerability in certain apache commons-collections versions -->
										<exclude>commons-collections:commons-collections:(,3.2.2)</exclude>
										<exclude>org.apache.commons:commons-collections4:(,4.1)</exclude>
										<!-- Avoid log4shell and related exploits -->
										<exclude>org.apache.logging.log4j:log4j-api:(,2.17.2)</exclude>
										<exclude>org.apache.logging.log4j:log4j-core:(,2.17.2)</exclude>
										<!-- Avoid similar security risks -->
										<exclude>ch.qos.logback:logback-core:(,1.2.11)</exclude>
									</excludes>
								</bannedDependencies>
								<!-- Require specific Maven version (do *not* use <project.prerequisites /> for this!) -->
								<requireMavenVersion>
									<version>${maven.minimum.version}</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
						</manifest>
						<manifestEntries>
							<!--suppress UnresolvedMavenProperty -->
							<Build-Job>${JOB_NAME}</Build-Job>
							<!--suppress UnresolvedMavenProperty -->
							<Build-Id>${BUILD_ID}</Build-Id>
							<!--suppress UnresolvedMavenProperty -->
							<Build-Number>${BUILD_NUMBER}</Build-Number>
							<!--suppress UnresolvedMavenProperty -->
							<Build-Repository-Rev>${GIT_COMMIT}</Build-Repository-Rev>
							<Build-Time>${maven.build.timestamp}</Build-Time>
							<Target-JRE>${javaRelease}</Target-JRE>
							<version_name>${project.groupId}:${project.artifactId}</version_name>
							<version_description>${project.description}</version_description>
							<version_copyright>${archiver.copyright}</version_copyright>
							<version_vendor>${project.organization.name} (${project.organization.url})</version_vendor>
							<version_version>${project.version}</version_version>
						</manifestEntries>
					</archive>
					<bottom>${javadoc.copyright}</bottom>
					<detectOfflineLinks>false</detectOfflineLinks>
					<doclint>${javadoc.doclint}</doclint>
					<legacyMode>${javadoc.noJ9modules}</legacyMode>
					<notimestamp>true</notimestamp>
					<resourcesArtifacts>
						<resourcesArtifact>
							<groupId>org.evolvis.tartools.maven-parent</groupId>
							<artifactId>jdx</artifactId>
							<version>${org.evolvis.tartools.maven-parent.jdx}</version>
						</resourcesArtifact>
					</resourcesArtifacts>
					<source>${javaRelease}</source>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<!--suppress MavenModelInspection -->
						<phase>DISABLE_FORKED_LIFECYCLE_MSOURCES-13</phase>
					</execution>
					<execution>
						<id>attach-sources-no-fork</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${argLine} -Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<systemPropertyVariables>
						<java.util.logging.config.file>src/test/resources/logging.properties</java.util.logging.config.file>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencyManagement>
		<dependencies>
			<!-- use this in e.g. plugin[].dependencies to make it log sanely -->
			<dependency>
				<groupId>org.evolvis.tartools.maven-parent</groupId>
				<artifactId>bs</artifactId>
				<version>${org.evolvis.tartools.maven-parent.version}</version>
				<classifier>tests</classifier>
			</dependency>
			<!-- InitialiseLogging helper to load config from classpath -->
			<dependency>
				<groupId>org.evolvis.tartools.maven-parent</groupId>
				<artifactId>lib</artifactId>
				<version>${org.evolvis.tartools.maven-parent.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<repositories>
		<repository>
			<releases>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<checksumPolicy>fail</checksumPolicy>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<releases>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<checksumPolicy>fail</checksumPolicy>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
		</pluginRepository>
	</pluginRepositories>
</project>
